options(width=250)
library(foreign)
library(statnet)
library(ggplot2)
setwd("C:/Documents and Settings/socalar/My Documents/My Dropbox/R/network")
source("plotg.R")
data <- read.csv("S:/Data/network.txt", sep="|", encoding="latin1")
data <- read.csv("statsmini.txt", sep="|", encoding="latin1")
str(data)
gcord
data$ParentId
length(data$ParentId)
?network
data(flo)
str(flo)
flo
str(data)
data$ParentId
View(data)
attach(data)
navn <- OrganizationNameID
chef <- ParentId
chef
navn
mat <- matrix(, nrow=length(navn), ncol=length(navn))
rownames(mat) <- navn
colnames(mat) <- navn
# Vi sætter diagonalen til 0
mat[,] <- 0
chefnavn <- levels(chef)
for (i in 1:length(chefnavn)){
poschef   <- which(navn==as.character(chefnavn[i]))
posslave  <- which(chef==as.character(chefnavn[i]))
mat[poschef,posslave]   <- 1
mat[posslave, poschef]  <- 1
}
net <-network(mat, directed=TRUE)
plotg(net)
str(net)
net
plot(net)
mat
which(navn==chef)
navn
chef
which(chef==navn[1])
chef
data
data[1]
data[1,]
a <- which(navn==chef)
data[a,]
a
a <- which(navn[1]==chef)
data[a,]
navn[1]
mat <- matrix(, nrow=length(navn), ncol=length(navn))
rownames(mat) <- navn
colnames(mat) <- navn
# Vi sætter diagonalen til 0
mat[,] <- 0
mat
length(navn)
nrow(data)
chefnavn <- chef
for (i in 1:length(chefnavn)){
poschef   <- which(navn==chefnavn[i])
posslave  <- which(chef==chefnavn[i])
mat[poschef,posslave]   <- 1
mat[posslave, poschef]  <- 1
}
net <-network(mat, directed=TRUE)
plotg(net)
plotg
plot(net)
gplot3d(net)
?glot3d
?gplot3d
gplot3d(net, label=OrganizationName )
options(width=250)
library(foreign)
library(statnet)
library(ggplot2)
setwd("C:/Documents and Settings/socalar/My Documents/My Dropbox/R/network")
#setwd("/home/grau/Dropbox/R/network")
source("plotg.R")
data <- read.csv("save1_organizationstree.txt", sep="|", encoding="latin1")
str(data)
id      <- data$AuthorityIdentifier
parent  <- data$AuthorityParentId
mat <- matrix(, ncol=2)
a <- which(id[1]==parent)
a
mat[,1] <- rep(id[1], length(a))
mat <- matrix(nrow=, ncol=2)
a <- which(id[1]==parent)
V1 <- rep(id[1], length(a))
V2 <- id[a]
tempmat <- c(V1, V2)
mat <- matrix(nrow=1, ncol=2)
a <- which(id[1]==parent)
V1 <- rep(id[1], length(a))
V2 <- id[a]
tempmat <- c(V1, V2)
rbind(mat, tempmat)
tempmat
tempmat <- matrix(V1, V2)
tempmat <- cbind(V1, V2)
rbind(mat, tempmat)
mat <- matrix(, ncol=2)
a <- which(id[1]==parent)
V1 <- rep(id[1], length(a))
V2 <- id[a]
tempmat <- cbind(V1, V2)
rbind(mat, tempmat)
mat <- matrix(, ncol=2)
for (i in seq(id)){
a <- which(id[i]==parent)
V1 <- rep(id[i], length(a))
V2 <- id[a]
tempmat <- cbind(V1, V2)
rbind(mat, tempmat)
}
mat
mat <- matrix(, ncol=2)
for (i in seq(id)){
a <- which(id[i]==parent)
V1 <- rep(id[i], length(a))
V2 <- id[a]
tempmat <- cbind(V1, V2)
mat <- rbind(mat, tempmat)
}
mat
nat <- network(mat, matrix.type="edgelist")
mat <- mat[-1,]
mat
nat <- network(mat, matrix.type="edgelist")
nat <- network(mat, matrix.type="edgelist", directed=TRUE)
nat <- network(mat, matrix.type="edgelist", directed=TRUE)
mat
str(mat)
mat <- as.character(mat[-1,])
mat
mat <- matrix(, ncol=2)
for (i in seq(id)){
a <- which(id[i]==parent)
V1 <- rep(id[i], length(a))
V2 <- id[a]
tempmat <- cbind(V1, V2)
mat <- rbind(mat, tempmat)
mat <- as.character(mat[-1,])
nat <- network(mat, matrix.type="edgelist")
)
mat <- matrix(, ncol=2)
for (i in seq(id)){
a <- which(id[i]==parent)
V1 <- as.character(rep(id[i], length(a)))
V2 <- as.character(id[a])
tempmat <- cbind(V1, V2)
mat <- rbind(mat, tempmat)
}
mat <- mat[-1,]
nat <- network(mat, matrix.type="edgelist")
plot(nat)
id
id
id
parent
id
nat
str(nat)
list.vertex.attributes(nat)
mat
data(flo)
nflo <- network(flo, directed=FALSE) # Create a network object based on flo
nflo # Get a quick description of the data
summary(nflo) # Get an overall summary
summary(nat)
nat
mat
print(nflo) # Simple print method
network.dyadcount(nflo) # How many dyads in nflo?
network.edgecount(nflo) # How many edges are present?
network.size(nflo) # How large is the network?
as.sociomatrix(nflo) # Show it as a sociomatrix
as.sociomatrix(nat) # Show it as a sociomatrix
nflo[,] # Another way to do it
plot(nflo,displaylabels=T,boxed.labels=F) # Plot with names
nflo %v% "woo" <- letters[1:16] # Letter the families
nflo
list.vertex.attributes(nflo) # List all vertex attributes
nat <- network(mat, matrix.type="edgelist")
nat %v% "navn" <- letters[1:24]
list.vertex.attributes(nat)
nflo %n% "zoo" <- "R is TanFastic!" # A key network-level covariate
list.network.attributes(nflo) # List all network attributes
str(data)
id      <- data$AuthorityIdentifier
parent  <- data$AuthorityParentId
idnavn  <- data$AuthorityName
parentnavn <- data$AuthorityParent
mat <- matrix(, ncol=4)
for (i in seq(id)){
a <- which(id[i]==parent)
V1 <- as.character(rep(id[i], length(a)))
V2 <- as.character(id[a])
idl <-
parentl <-
tempmat <- cbind(V1, V2, idl, parentl)
mat <- rbind(mat, tempmat)
}
mat <- mat[-1,]
mat <- matrix(, ncol=4)
for (i in seq(id)){
a <- which(id[i]==parent)
V1 <- as.character(rep(id[i], length(a)))
V2 <- as.character(id[a])
idl <- as.character(rep(idnavn[i], length(a)))
parentl <- parentnavn[i]
tempmat <- cbind(V1, V2, idl, parentl)
mat <- rbind(mat, tempmat)
}
a <- which(id[i]==parent)
V1 <- as.character(rep(id[i], length(a)))
V2 <- as.character(id[a])
idl <- as.character(rep(idnavn[i], length(a)))
parentl <- parentnavn[i]
tempmat <- cbind(V1, V2, idl, parentl)
tempmat
parentl
V2
V2 <- as.character(id[a])
V2
a
a <- which(id[1]==parent)
a
V1 <- as.character(rep(id[1], length(a)))
V1
mat <- matrix(, ncol=4)
for (i in seq(id)){
a <- which(id[i]==parent)
V1 <- as.character(rep(id[i], length(a)))
V2 <- as.character(id[a])
idl <- as.character(rep(idnavn[i], length(a)))
parentl <- as.character(parentnavn[a])
tempmat <- cbind(V1, V2, idl, parentl)
mat <- rbind(mat, tempmat)
}
mat <- mat[-1,]
mat
mat <- matrix(, ncol=4)
for (i in seq(id)){
a <- which(id[i]==parent)
V1 <- as.character(rep(id[i], length(a)))
V2 <- as.character(id[a])
idl <- as.character(rep(parentnavn[i], length(a)))
parentl <- as.character(idnavn[a])
tempmat <- cbind(V1, V2, idl, parentl)
mat <- rbind(mat, tempmat)
}
mat <- mat[-1,]
mat
nat <- network(mat, matrix.type="edgelist")
str(mat)
is.matrix(mat)
mat <- as.matrix(mat[-1,])
nat <- network(mat, matrix.type="edgelist")
str(mat)
mat
navne <- mat[,c(3,4)]
edges <- mat[,c(1,2)]
nat <- network(edges, matrix.type="edgelist")
nat <- network(edges, matrix.type="edgelist")
nat %v% "navn" <- navne[,1]
list.vertex.attributes(nat)
library(sna)
gplot(nat, gmode="graph",label=navne[,3])
navne
mat <- matrix(, ncol=4)
for (i in seq(id)){
a <- which(id[i]==parent)
V1 <- as.character(rep(id[i], length(a)))
V2 <- as.character(id[a])
idl <- as.character(rep(parentnavn[i], length(a)))
parentl <- as.character(idnavn[a])
tempmat <- cbind(V1, V2, idl, parentl)
mat <- rbind(mat, tempmat)
}
mat
mat <- as.matrix(mat[-1,])
navne <- mat[,c(3,4)]
edges <- mat[,c(1,2)]
nat <- network(edges, matrix.type="edgelist")
gplot(nat, gmode="graph",label=navne[,3])
gplot(nat, gmode="graph",label=navne[,1])
gplot(nat, gmode="graph",label=navne[,2])
gplot(nat, gmode="graph",label=navne[,2])
navne
nat
nat$vertex.names
options(width=250)
library(foreign)
library(statnet)
library(ggplot2)
setwd("C:/Documents and Settings/socalar/My Documents/My Dropbox/R/network")
#setwd("/home/grau/Dropbox/R/network")
source("plotg.R")
data <- read.csv("save1_organizationstree.txt", sep="|", encoding="latin1")
str(data)
attach(data)
id      <- data$AuthorityIdentifier
parent  <- data$AuthorityParentId
idnavn  <- data$AuthorityName
parentnavn <- data$AuthorityParent
mat <- matrix(, ncol=4)
for (i in seq(id)){
a <- which(id[i]==parent)
V1 <- as.character(rep(id[i], length(a)))
V2 <- as.character(id[a])
idl <- as.character(rep(parentnavn[i], length(a)))
parentl <- as.character(idnavn[a])
tempmat <- cbind(V1, V2, idl, parentl)
mat <- rbind(mat, tempmat)
}
mat <- as.matrix(mat[-1,])
navne <- mat[,c(3,4)]
edges <- mat[,c(1,2)]
nat <- network(edges, matrix.type="edgelist")
gplot(nat, gmode="graph",label=navne[,2])
mat
gplot(nat, gmode="graph",label=navne[,2])
mat
mat <- matrix(, ncol=4)
for (i in seq(id)){
a <- which(id[i]==parent)
V1 <- as.character(rep(id[i], length(a)))
V2 <- as.character(id[a])
parentl <- as.character(rep(parentnavn[i], length(a)))
idl <- as.character(idnavn[a])
tempmat <- cbind(V1, V2, idl, parentl)
mat <- rbind(mat, tempmat)
}
mat <- as.matrix(mat[-1,])
navne <- mat[,c(3,4)]
edges <- mat[,c(1,2)]
navne
idnavn
id
navne
parentnavn
as.character(parentnavn)
parentnavn <- as.character(data$AuthorityParent)
mat <- matrix(, ncol=4)
for (i in seq(id)){
a <- which(id[i]==parent)
V1 <- as.character(rep(id[i], length(a)))
V2 <- as.character(id[a])
parentl <- as.character(rep(parentnavn[i], length(a)))
idl <- as.character(idnavn[a])
tempmat <- cbind(V1, V2, idl, parentl)
mat <- rbind(mat, tempmat)
}
mat
mat <- cbind(as.character(id),as.character(parent))
mat
nat <- network(edges, matrix.type="edgelist")
gplot(nat, gmode="graph",label=idnavn)
gplot(nat, gmode="graph",label=idnavn)
idnavn
idnavn  <- as.character(data$AuthorityName)
parentnavn <- as.character(data$AuthorityParent)
gplot(nat, gmode="graph",label=idnavn)
mat
navn <- idnavn[-1]
navn
gplot(nat, gmode="graph",label=navn)
str(nat)
summary(nat)
?network
get.vertex.atrribute(nat, vertex.name)
get.vertex.atrribute(nat, "vertex.name")
get.vertex.atribute(nat, "vertex.name")
get.vertex.attribute(nat, "vertex.name")
get.vertex.attribute(nat, vertex.name)
get.vertex.attribute(nat, "vertex.name")
list.vertex.attributes(nat)
idnavn  <- as.character(data$AuthorityName)
set.vertex.attributes(nat, "vertex.names", idnavn)
set.vertex.attribute(nat, "vertex.names", idnavn)
list.vertex.attribute(nat)
list.vertex.attributes(nat)
get.vertex.attribute(nat)
get.vertex.attribute(nat, "vertex.names")
nat
plot(nat)
?gplot
gplot(nat)
gplot(nat, label=TRUE)
gplot
?gplot
str(nat)
str(nat$mel)
mat
mat <- cbind(as.character(id),as.character(parent), idnavn)
nat <- network(edges, matrix.type="edgelist")
list.vertex.attributes(nat)
get.vertex.attribute(nat, "vertex.names")
id      <- data$AuthorityIdentifier
parent  <- data$AuthorityParentId
idnavn  <- as.character(data$AuthorityName)
parentnavn <- as.character(data$AuthorityParent)
mat <- cbind(as.character(id),as.character(parent), idnavn)
nat <- network(edges, matrix.type="edgelist")
get.vertex.attributes(nat,"vertex.names")
get.vertex.attribute(nat,"vertex.names")
id      <- data$AuthorityIdentifier
parent  <- data$AuthorityParentId
idnavn  <- as.character(data$AuthorityName)
parentnavn <- as.character(data$AuthorityParent)
mat <- cbind(as.character(id),as.character(parent), idnavn)
nat <- network(edges, matrix.type="edgelist")
#nat %v% "navn" <- navne[,1]
get.vertex.attribute(nat,"vertex.names")
vnames <- get.vertex.attribute(nat,"vertex.names")
which(vnames==id)
sort
?sort
?order
data <- data[order(data$AuthorityIdentifier),]
data <- read.csv("save1_organizationstree.txt", sep="|", encoding="latin1")
detach(data)
data <- read.csv("save1_organizationstree.txt", sep="|", encoding="latin1")
str(data)
data <- data[order(data$AuthorityIdentifier),]
id      <- data$AuthorityIdentifier
parent  <- data$AuthorityParentId
idnavn  <- as.character(data$AuthorityName)
parentnavn <- as.character(data$AuthorityParent)
mat <- cbind(as.character(id),as.character(parent), idnavn)
nat <- network(edges, matrix.type="edgelist")
vnames <- get.vertex.attribute(nat,"vertex.names")
vnames
id
mat <- cbind(id, parent, idnavn)
id      <- as.character(data$AuthorityIdentifier)
parent  <- as.character(data$AuthorityParentId)
idnavn  <- as.character(data$AuthorityName)
parentnavn <- as.character(data$AuthorityParent)
mat <- cbind(id, parent, idnavn)
nat <- network(edges, matrix.type="edgelist")
vnames <- get.vertex.attribute(nat,"vertex.names")
identical(vnames==id)
identical(vnames,id)
id      <- as.character(data$AuthorityIdentifier)
parent  <- as.character(data$AuthorityParentId)
idnavn  <- as.character(data$AuthorityName)
parentnavn <- as.character(data$AuthorityParent)
mat <- cbind(id, parent, idnavn)
nat <- network(mat, matrix.type="edgelist")
str(mat)
mat
mat <- cbind(id, parent)
nat <- network(mat, matrix.type="edgelist")
mat <- cbind(as.character(id), as.character(parent))
nat <- network(mat, matrix.type="edgelist")
mat
edges
?network
mat
which(mat[,1]==NA)
which(mat[,2]==NA)
mat[,2]
mat[,2]==NA
which(is.na(mat[,2])==TRUE)
na1 <- which(is.na(mat[,1])==TRUE)
na2 <- which(is.na(mat[,2])==TRUE)
na1
na2
c(na1,na2)
na1 <- which(is.na(mat[,1])==TRUE)
na2 <- which(is.na(mat[,2])==TRUE)
na <- c(na1,na2)
mat <- mat[-na,]
nat <- network(mat, matrix.type="edgelist")
vnames <- get.vertex.attribute(nat,"vertex.names")
identical(vnames,id)
gplot(nat, gmode="graph",label=idnavn)
options(width=250)
library(foreign)
library(statnet)
library(ggplot2)
library(sna)
setwd("C:/Documents and Settings/socalar/My Documents/My Dropbox/R/FOA")
source("plotg.R")
setwd("C:/Documents and Settings/socalar/My Documents/My Dropbox/R/FOA")
data <- read.csv("statsministeriet_individ_feb_2012.txt", sep="|", encoding="latin1")
str(data)
setwd("C:/Documents and Settings/socalar/My Documents/My Dropbox/R/FOA")
data.ind    <- read.csv("statsministeriet_individ_feb_2012.txt", sep="|", encoding="latin1")
data.org    <- read.csv("statsministeriet_org_feb_2012.txt", sep="|", encoding="latin1")
str(data.ind)
data.ind    <- read.csv("statsministeriet_individ_feb_2012.txt", sep="|", encoding="latin1")
data.org    <- read.csv("statsministeriet_org_feb_2012.txt", sep="|", encoding="latin1")
data.ind <- data.ind[order(data$FOAPersonID),]
data.org <- data.org[order(data$AuthorityIdentifier),]
str(data.org)
str(data.ind)
data.ind <- data.ind[order(data.ind$FOAPersonID),]
data.org <- data.org[order(data.org$AuthorityIdentifier),]
str(data.ind)
data.ind$Firstname <- as.character(data.ind$Firstname)
setwd("C:/Documents and Settings/socalar/My Documents/My Dropbox/R/soc.ca")
